<?php

/**
 * @file
 * Advertising Entity: AdTech Factory module file.
 */

use Drupal\ad_entity\TargetingCollection;

/**
 * Implements hook_ad_entity_module_info().
 */
function ad_entity_adtech_ad_entity_module_info() {
  return [
    'personalization' => TRUE,
    'consent_aware' => FALSE,
  ];
}

/**
 * Implements hook_library_info_build().
 */
function ad_entity_adtech_library_info_build() {
  $libraries = [];

  if ($config = \Drupal::config('ad_entity.settings')) {
    $settings = $config->get('adtech_factory');
    if (!empty($settings['library_source'])) {
      $libraries['provider'] = [
        'header' => TRUE,
        'js' => [
          $settings['library_source'] => [
            'type' => 'external',
            'attributes' => ['async' => 'async'],
          ],
        ],
        'dependencies' => ['ad_entity/common.googletag.init'],
      ];
    }
  }

  return $libraries;
}

/**
 * Implements hook_page_attachments().
 */
function ad_entity_adtech_page_attachments(&$attachments) {
  if (!($config = \Drupal::config('ad_entity.settings'))) {
    return;
  }

  // The library must be included in the Html head. Since we cannot
  // foresee whether or when ads are being loaded dynamically
  // (e.g. via AJAX), we must include the library on any page.
  // On admin pages though, we most probably don't need the library.
  // It would still be loaded if an ad is being included directly on the page.
  /** @var \Drupal\Core\Routing\AdminContext $admin_context */
  $admin_context = \Drupal::service('router.admin_context');
  if (!$admin_context->isAdminRoute()) {
    $settings = $config->get('adtech_factory');
    if (!empty($settings['page_targeting'])) {
      // Include page targeting.
      $page_targeting = new TargetingCollection($settings['page_targeting']);
      $page_targeting->filter();
      $attachments['#attached']['library'][] = 'ad_entity_adtech/page_targeting';
      $attachments['#attached']['drupalSettings']['adtech_page_targeting'] = $page_targeting->toArray();
    }
    else {
      // No page targeting given, only include the library itself.
      $attachments['#attached']['library'][] = 'ad_entity_adtech/provider';
    }

    // When script preloading is enabled, include
    // a preload tag for the required external libraries.
    if ($config->get('tweaks.include_preload_tags') && ($href = $config->get('adtech_factory.library_source'))) {
      _ad_entity_attach_gpt_preload($attachments);
      $attachments['#attached']['html_head'][] = [
        [
          '#attributes' => [
            'rel' => 'preload',
            'as' => 'script',
            'href' => $href,
          ],
          '#tag' => 'link',
        ],
        'preload_atf_lib',
      ];
    }
  }
}

/**
 * Implements hook_theme().
 */
function ad_entity_adtech_theme($existing, $type, $theme, $path) {
  return [
    'adtech_default' => [
      'variables' => ['ad_entity' => NULL],
      'file' => 'ad_entity_adtech.theme.inc',
    ],
    'adtech_iframe' => [
      'variables' => ['ad_entity' => NULL],
      'file' => 'ad_entity_adtech.iframe.inc',
    ],
  ];
}
