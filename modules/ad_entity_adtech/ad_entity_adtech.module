<?php

/**
 * @file
 * Advertising Entity: AdTech Factory module file.
 */

/**
 * Implements hook_ad_entity_module_info().
 */
function ad_entity_adtech_ad_entity_module_info() {
  return [
    'personalization' => TRUE,
    'consent_aware' => FALSE,
  ];
}

/**
 * Implements hook_library_info_build().
 */
function ad_entity_adtech_library_info_build() {
  $libraries = [];

  if ($config = \Drupal::config('ad_entity.settings')) {
    $settings = $config->get('adtech_factory');
    if (!empty($settings['library_source'])) {
      $libraries['provider'] = [
        'header' => TRUE,
        'js' => [
          $settings['library_source'] => [
            'type' => 'external',
            'attributes' => ['async' => 'async'],
          ],
        ],
        'dependencies' => ['ad_entity/common.googletag.init'],
      ];
    }
  }

  return $libraries;
}

/**
 * Implements hook_page_attachments().
 */
function ad_entity_adtech_page_attachments(&$attachments) {
  if ($config = \Drupal::config('ad_entity.settings')) {
    $settings = $config->get('adtech_factory');
    if (!empty($settings['page_targeting'])) {
      $attachments['#attached']['library'][] = 'ad_entity_adtech/page_targeting';
      $attachments['#attached']['drupalSettings']['adtech_page_targeting'] = $settings['page_targeting'];
    }
    else {
      $attachments['#attached']['library'][] = 'ad_entity_adtech/provider';
    }
  }
}

/**
 * Implements hook_theme().
 */
function ad_entity_adtech_theme($existing, $type, $theme, $path) {
  return [
    'adtech_default' => [
      'variables' => ['ad_entity' => NULL],
      'file' => 'ad_entity_adtech.theme.inc',
    ],
    'adtech_iframe' => [
      'variables' => ['ad_entity' => NULL],
      'file' => 'ad_entity_adtech.iframe.inc',
    ],
  ];
}
