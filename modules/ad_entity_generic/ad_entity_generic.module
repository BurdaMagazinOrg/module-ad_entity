<?php

/**
 * @file
 * Advertising Entity: Generic ads module file.
 */

use Drupal\Core\Template\Attribute;
use Drupal\ad_entity\Helper\Unique;
use Drupal\ad_entity\TargetingCollection;
use Drupal\ad_entity\Render\Markup;

/**
 * Implements hook_theme().
 */
function ad_entity_generic_theme($existing, $type, $theme, $path) {
  return [
    'ad_entity_generic_js' => [
      'variables' => ['ad_entity' => NULL],
    ],
  ];
}

/**
 * Preprocess implementation for a Generic ad tag view.
 *
 * @param array &$variables
 *   An array of available variables.
 */
function template_preprocess_ad_entity_generic_js(array &$variables) {
  /** @var \Drupal\ad_entity\Entity\AdEntityInterface $ad_entity */
  $ad_entity = $variables['ad_entity'];
  $settings = $ad_entity->getThirdPartySettings('ad_entity_generic');

  // Generate attributes.
  $id = Unique::getHtmlId($settings['id']);
  $attributes = new Attribute(['id' => $id]);
  $attributes->addClass('adtag');
  $attributes->setAttribute('data-ad-format', $settings['format']);
  $variables['attributes'] = $attributes;
}

/**
 * Implements hook_page_attachments().
 */
function ad_entity_generic_page_attachments(array &$attachments) {
  $config = \Drupal::config('ad_entity.settings');

  // We cannot foresee whether or not the provider is being used,
  // e.g. via Drupal attach behaviors and AJAX, but it must be
  // placed into the HTML head. On admin pages though, we most
  // probably don't need the library. It would still be loaded
  // if an ad is being included directly on the page.
  /** @var \Drupal\Core\Routing\AdminContext $admin_context */
  $admin_context = \Drupal::service('router.admin_context');
  if (!$admin_context->isAdminRoute()) {
    /** @var \Drupal\ad_entity\AdEntityUsage $usage */
    $usage = \Drupal::service('ad_entity.usage');
    $used_view_plugins = $usage->getCurrentlyUsedAdViewPlugins();
    if (!empty($used_view_plugins['generic'])) {
      $attachments['#attached']['library'][] = 'ad_entity_generic/base';
    }
  }

  // Include targeting as a global JavaScript variable, if enabled.
  if (!$config->get('generic.page_targeting.enabled') || \Drupal::service('router.admin_context')->isAdminRoute()) {
    return;
  }
  if (!($js_variable = $config->get('generic.page_targeting.js_variable'))) {
    return;
  }

  /** @var \Drupal\ad_entity\Plugin\AdContextManager $context_manager */
  $context_manager = \Drupal::service('ad_entity.context_manager');
  $script_content = 'window.' . $js_variable . '=window.' . $js_variable . '||[];';

  $targeting = new TargetingCollection();
  foreach ($context_manager->getContextDataForPlugin('targeting') as $data) {
    if (isset($data['settings']['targeting']) && empty($data['apply_on'])) {
      foreach ($data['settings']['targeting'] as $key => $value) {
        $targeting->add($key, $value);
      }
    }
  }
  if (!$targeting->isEmpty()) {
    $targeting->filter();
    $script_content .= $js_variable . '.push(' . $targeting->toJson() . ');';
  }

  $show_ads = TRUE;
  foreach ($context_manager->getContextDataForPlugin('turnoff') as $data) {
    if (empty($data['apply_on'])) {
      $show_ads = FALSE;
      break;
    }
  }
  $script_content .= $show_ads ? $js_variable . '.push({show_ads:true});' : $js_variable . '.push({show_ads:false});';

  $attachments['#attached']['html_head'][] = [
    [
      '#type' => 'html_tag',
      '#tag' => 'script',
      '#value' => Markup::create($script_content),
      '#attributes' => new Attribute(['id' => 'page-targeting']),
    ],
    'page_targeting',
  ];
}
